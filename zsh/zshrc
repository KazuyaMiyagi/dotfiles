if [[ "$(/usr/bin/uname -m)" == "arm64" ]] ; then
    export HOMEBREW_PREFIX="/opt/homebrew"
else
    export HOMEBREW_PREFIX="/usr/local"
fi

eval "$(${HOMEBREW_PREFIX}/bin/brew shellenv)"

alias be='bundle exec'
alias tf='terraform'
alias switch_role='eval "$(sts_session_manager switch_role)"'
alias switch_back='eval "$(sts_session_manager switch_back)"'
alias tree='tree -N -C'
alias ls='ls -G'
alias chrome="/Applications/Google\ Chrome.app/Contents/MacOS/Google\ Chrome"
alias chrome-incognito="chrome --incognito"
alias chrome-guest="chrome --guest"
alias chrome-canary="/Applications/Google\ Chrome\ Canary.app/Contents/MacOS/Google\ Chrome\ Canary"
alias chrome-canary-incognito="chrome-canary --incognito"
alias chrome-canary-guest="chrome-canary --guest"
alias plantuml_start='docker run --name plantuml-server --rm --env "PLANTUML_LIMIT_SIZE=8192" -d -p 8888:8080 plantuml/plantuml-server'
alias plantuml_stop='docker stop plantuml-server'
alias k8s_dashbord_start='kubectl apply -f https://raw.githubusercontent.com/kubernetes/dashboard/v2.0.0-rc7/aio/deploy/recommended.yaml'
alias k8s_dashbord_stop='kubectl delete -f https://raw.githubusercontent.com/kubernetes/dashboard/v2.0.0-rc7/aio/deploy/recommended.yaml'
alias jwt-decode="jq -R 'split(\".\") | .[1] | @base64d | fromjson'"
alias youtube-dl="youtube-dl -f bestvideo+bestaudio --merge-output-format mp4"
alias flake8="flake8 --config ${XDG_CONFIG_HOME}/flake8"

export DOCKER_BUILDKIT=1
export LESSCHARSET=utf-8
export JAVA_HOME=$(/usr/libexec/java_home)
export TF_CLI_ARGS_plan="--parallelism=50"
export TF_CLI_ARGS_apply="--parallelism=50"
export TF_CLI_ARGS_refresh="--parallelism=50"

path=(
    ${HOMEBREW_PREFIX}/bin
    ${HOMEBREW_PREFIX}/sbin
    ${HOMEBREW_PREFIX}/opt/curl/bin(N-/)
    ${HOMEBREW_PREFIX}/opt/openssl@1.1/bin(N-/)
    ${GOPATH}/bin(N-/)
    ${JAVA_HOME}/bin(N-/)
    ${XDG_CONFIG_HOME}/bin(N-/)
    /Applications/draw.io.app/Contents/MacOS(N-/)
    ${path}
)

fpath=(
    $XDG_CONFIG_HOME/zsh/functions/(N-/)
    $fpath
)

for file in $(ls $ZDOTDIR/autoload/*.zsh) ;
do
    source $file
done
