if has('win32')
    let $PLUG_DIR = '~/vimfiles/plugged'
else
    let $PLUG_DIR = '~/.vim/plugged'
endif

call plug#begin($PLUG_DIR)

Plug 'itchyny/lightline.vim'
    set laststatus=2
    set t_Co=256
    let g:lightline = {
    \ 'colorscheme': 'PaperColor'
    \ }

Plug 'scrooloose/syntastic'
    let g:syntastic_always_populate_loc_list = 1
    let g:syntastic_php_checkers = ['phpcs']
    let g:syntastic_check_on_open = 1
    let g:syntastic_echo_current_error = 1
    let g:syntastic_enable_signs = 1
    let g:syntastic_enable_balloons = 0
    let g:syntastic_enable_highlighting = 1
    let g:syntastic_auto_jump = 0
    let g:syntastic_auto_loc_list = 2
    let g:syntastic_loc_list_height = 5
    let g:syntastic_mode_map = {
        \ 'mode': 'active',
        \ 'active_filetypes': ['ruby', 'php', 'pp', 'javascript', 'json'],
        \ 'passive_filetypes': []
        \ }
    let g:syntastic_stl_format = '[%E{Err: %fe #%e}%B{, }%W{Warn: %fw #%w}]'
    let g:syntastic_php_phpcs_post_args = '--standard=psr2'
    let g:syntastic_ruby_checkers = ['rubocop']

Plug 'glidenote/memolist.vim'
    if isdirectory(expand('~/Dropbox'))
        let g:memolist_path = '~/Dropbox/Memo'
    endif
    let g:memolist_vimfiler = 1

Plug 'codegram/vim-codereview', {'depends' :
    \ 'junkblocker/patchreview-vim'
    \ }

"Plug 'Markology'
Plug 'mattn/gist-vim'
Plug 'mattn/vim-maketable'
Plug 'joonty/vdebug'
let g:vdebug_options= {
\  'port' : 9010
\}
"Plug 'yuratomo/w3m.vim'
Plug 'tsukkee/unite-tag'
Plug 'mhinz/vim-signify'
"Plug 'mhinz/vim-startify'
Plug 'kannokanno/previm'
Plug 'tyru/open-browser.vim'
Plug 'thinca/vim-scouter'
Plug 'vim-jp/vimdoc-ja'
Plug 'tpope/vim-fugitive'
Plug 'rstacruz/sparkup', {'rtp': 'vim/'}
Plug 'taichouchou2/vim-endwise'
Plug 'junegunn/vim-emoji'
Plug 'derekwyatt/vim-scala'
Plug 'ujihisa/unite-colorscheme'
Plug 'ujihisa/unite-font'
" Plug 'supermomonga/vimshell-pure.vim'
Plug 'koron/nyancat-vim'
Plug 'osyo-manga/vim-over'
Plug 'nathanaelkane/vim-indent-guides'

Plug 'itchyny/calendar.vim'
    "let g:calendar_google_calendar = 1
    "let g:calendar_google_task = 1

Plug 'basyura/TweetVim', {'depends' :
    \ [ 'mattn/webapi-vim',
    \   'basyura/twibill.vim',
    \   'tyru/open-browser.vim',
    \   'h1mesuke/unite-outline',
    \   'basyura/bitly.vim',
    \   'Shougo/unite.vim'
    \ ]}

"Plug 'Lokaltog/vim-easymotion'

" ShougoWare
" Plug 'Shougo/Vimfiler'
" Plug 'Shougo/Vimshell'
" Plug 'Shougo/neocomplcache'
" Plug 'Shougo/neocomplcache-rsense'
" Plug 'Shougo/neosnippet'
" Plug 'Shougo/neosnippet-snippets'
"Plug 'Shougo/neocomplete'

" colorscheme
Plug 'nanotech/jellybeans.vim'
Plug 'w0ng/vim-hybrid'
Plug 'vim-scripts/twilight'
Plug 'jonathanfilip/vim-lucius'
Plug 'jpo/vim-railscasts-theme'
Plug 'altercation/vim-colors-solarized'
Plug 'vim-scripts/Wombat'
Plug 'vim-scripts/rdark'
Plug 'tomasr/molokai'
Plug 'cocopon/iceberg.vim'
Plug 'NERV-ous'
Plug 'sjl/badwolf'
Plug 'morhetz/gruvbox'

" vim-scripts repos
Plug 'L9'
Plug 'rails.vim'

" Non github repos
"Plug 'git://git.wincent.com/command-t.git'

call plug#end()

filetype plugin indent on     " Required!

if has('win32') && !has('gui_running')
    set encoding=cp932
else
    set encoding=utf-8
endif
"set fileencoding=utf-8
"set fileformat=unix
set fileencodings=utf-8,iso-2022-jp,euc-jp,cp932
set fileformats=unix,dos
set nobackup
set mouse=a
set ttymouse=xterm2
set nowrap
set nonumber
"set relativenumber
set title
set showcmd
set backspace=indent,eol,start

if has('mac') || has('win32')
    set clipboard=unnamed
else
    set clipboard=unnamedplus
endif

set nolist
set listchars=eol:\\,tab:^_,trail:~,extends:>,precedes:<",conceal:@,nbsp:@

" Search
set ignorecase
set smartcase
set wrapscan
set hlsearch

" Edit
set autoindent
set showmatch
set smartindent
set cindent

" Tab
set tabstop=4
set shiftwidth=4
set expandtab
set smarttab
set shiftround

" datetime
inoremap <Leader>c <C-R>=strftime('%Y-%m-%dT%H:%M:%S+09:00')<CR>

autocmd FileType ruby :set ts=2 sw=2 fenc=utf-8
autocmd FileType cucumber :set ts=2 sw=2 fenc=utf-8
autocmd BufNewFile,BufRead *.pp set filetype=puppet
autocmd BufNewFile,BufRead *.md set filetype=markdown

autocmd BufNewFile,BufRead *
            \ if expand('%:~') =~ '^\~/Dropbox' |
            \     set noswapfile |
            \ else |
            \     set swapfile|
            \ endif

function! EnvFunction()
    set encoding
    set fileencoding
    set fileformat
    set guifont
    set guifontwide
    set ambiwidth
    colorscheme
endfunction

command! Env :call EnvFunction()
command! Trim :%s/\s\+$//
command! ReloadVimrc source $MYVIMRC
command! Bgdark set background=dark
command! Bglight set background=light

" color
syntax on
set background=dark
if has('win32') && !has('gui_running')
    colorscheme default
else
    colorscheme gruvbox
endif

" 行末の半角スペースハイライト
highlight WhitespaceEOL cterm=undercurl,reverse
match WhitespaceEOL /\s\+$/

" 全角スペースの表示
highlight ZenkakuSpace cterm=undercurl,reverse
match ZenkakuSpace /　/

if has('multi_byte_ime') || has('xim')
  highlight CursorIM guibg=Purple guifg=NONE
endif


" Hack #104: Visual mode で選択したテキストを検索する
" http://vim-users.jp/2009/11/hack104/
vnoremap <silent> * "vy/\V<C-r>=substitute(escape(@v,'\/'),"\n",'\\n','g')<CR><CR>
