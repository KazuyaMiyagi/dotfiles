set encoding=utf-8
"set fileencoding=utf-8
"set fileformat=unix
set fileencodings=utf-8,iso-2022-jp,euc-jp,cp932
set fileformats=unix,dos
set swapfile
set nobackup
set mouse=a
set ttymouse=xterm2
set nowrap
set number
"set relativenumber
set title
set showcmd
set backspace=indent,eol,start

set list
set listchars=eol:\\,tab:^_,trail:~,extends:>,precedes:<",conceal:@,nbsp:@

" Search
set ignorecase
set smartcase
set wrapscan
set hlsearch

" Edit
set autoindent
set showmatch
set smartindent
set cindent

" Tab
set tabstop=4
set shiftwidth=4
set expandtab
set smarttab
set shiftround

" datetime
inoremap <Leader>c <C-R>=strftime('%Y-%m-%dT%H:%M:%S+09:00')<CR>

autocmd FileType ruby :set ts=2 sw=2 fenc=utf-8
autocmd FileType cucumber :set ts=2 sw=2 fenc=utf-8

function! EnvFunction()
    set encoding
    set fileencoding
    set fileformat
    set guifont
    set guifontwide
    set ambiwidth
endfunction

command! Env :call EnvFunction()
command! Trim :%s/\s\+$//
command! ReloadVimrc source $MYVIMRC
command! Bgdark set background=dark
command! Bglight set background=light

" color
syntax on
colorscheme default
set background=light

" 行末の半角スペースハイライト
highlight WhitespaceEOL ctermbg=red guibg=red
match WhitespaceEOL /\s\+$/

if has('multi_byte_ime') || has('xim')
  highlight CursorIM guibg=Purple guifg=NONE
endif

if has('win32')
    :let $VIMFILE_DIR = 'vimfiles'
else
    :let $VIMFILE_DIR = '.vim'
endif
if has('vim_starting')
  set runtimepath+=~/$VIMFILE_DIR/bundle/neobundle.vim/
endif

call neobundle#rc(expand('~/.vim/bundle/'))

" Let NeoBundle manage NeoBundle
NeoBundleFetch 'Shougo/neobundle.vim'

" Recommended to install
" After install, turn shell ~/.vim/bundle/vimproc, (n,g)make -f your_machines_makefile
NeoBundle 'Shougo/vimproc'

" My Bundles here:
"
" Note: You don't set neobundle setting in .gvimrc!
" Original repos on github

NeoBundle 'itchyny/lightline.vim'
set laststatus=2
set t_Co=256

NeoBundle 'scrooloose/syntastic'
let g:syntastic_always_populate_loc_list = 1
let g:syntastic_php_checkers = ['phpcs']
let g:syntastic_check_on_open = 1
let g:syntastic_echo_current_error = 1
let g:syntastic_enable_signs = 1
let g:syntastic_enable_balloons = 0
let g:syntastic_enable_highlighting = 1
let g:syntastic_auto_jump = 0
let g:syntastic_auto_loc_list = 2
let g:syntastic_loc_list_height = 5
let g:syntastic_mode_map = { 'mode': 'active',
                          \ 'active_filetypes': ['ruby', 'php'],
                          \ 'passive_filetypes': [] }
let g:syntastic_stl_format = '[%E{Err: %fe #%e}%B{, }%W{Warn: %fw #%w}]'
let g:syntastic_php_phpcs_post_args = '--standard=psr2'

NeoBundle 'airblade/vim-gitgutter'
NeoBundle 'thinca/vim-scouter'
NeoBundle 'vim-jp/vimdoc-ja'
NeoBundle 'tpope/vim-fugitive'
NeoBundle 'rstacruz/sparkup', {'rtp': 'vim/'}
NeoBundle 'taichouchou2/vim-endwise'
NeoBundle 'junegunn/vim-emoji'
NeoBundle 'ujihisa/unite-colorscheme'
NeoBundle 'ujihisa/unite-font'
NeoBundle 'supermomonga/vimshell-pure.vim'
"NeoBundle 'Lokaltog/vim-easymotion'
"NeoBundle 'mhinz/vim-startify'
"NeoBundle 'mhinz/vim-signify'

" ShougoWare
NeoBundle 'Shougo/Vimfiler'
NeoBundle 'Shougo/Vimshell'
NeoBundle 'Shougo/neocomplcache'
NeoBundle 'Shougo/neocomplcache-rsense'
NeoBundle 'Shougo/neosnippet'
"NeoBundle 'Shougo/neocomplete'

" colorscheme
"NeoBundle 'nanotech/jellybeans.vim'
"NeoBundle 'w0ng/vim-hybrid'
"NeoBundle 'vim-scripts/twilight'
"NeoBundle 'jonathanfilip/vim-lucius'
"NeoBundle 'jpo/vim-railscasts-theme'
"NeoBundle 'altercation/vim-colors-solarized'
"NeoBundle 'vim-scripts/Wombat'
"NeoBundle 'vim-scripts/rdark'
NeoBundle 'tomasr/molokai'

"TweetVimとその依存関係のプラグイン
NeoBundle 'basyura/TweetVim'
NeoBundle 'mattn/webapi-vim'
NeoBundle 'basyura/twibill.vim'
NeoBundle 'tyru/open-browser.vim'
NeoBundle 'h1mesuke/unite-outline'
NeoBundle 'basyura/bitly.vim'
NeoBundle 'Shougo/unite.vim'

" vim-scripts repos
NeoBundle 'L9'
NeoBundle 'rails.vim'

" Non github repos
NeoBundle 'git://git.wincent.com/command-t.git'

" Non git repos

filetype plugin indent on     " Required!
"
" Brief help
" :NeoBundleList          - list configured bundles
" :NeoBundleInstall(!)    - install(update) bundles
" :NeoBundleClean(!)      - confirm(or auto-approve) removal of unused bundles

" Installation check.
NeoBundleCheck
