if has('win32')
    let $PLUG_DIR = '~/vimfiles/plugged'
else
    let $PLUG_DIR = $XDG_CONFIG_HOME.'/vim/plugged'
endif

call plug#begin($PLUG_DIR)

Plug 'itchyny/lightline.vim'
    set laststatus=2
    set noshowmode
    set t_Co=256
    let g:lightline = {
    \ 'colorscheme': 'tokyonight'
    \ }
Plug 'mattn/vim-sqlfmt'
Plug 'fatih/vim-go'
Plug 'scrooloose/syntastic'
    let g:syntastic_always_populate_loc_list = 1
    let g:syntastic_check_on_open = 1
    let g:syntastic_echo_current_error = 1
    let g:syntastic_enable_signs = 1
    let g:syntastic_enable_balloons = 0
    let g:syntastic_enable_highlighting = 1
    let g:syntastic_auto_jump = 0
    let g:syntastic_auto_loc_list = 2
    let g:syntastic_loc_list_height = 5
    let g:syntastic_mode_map = {
        \ 'mode': 'active',
        \ 'active_filetypes': ['ruby', 'pp', 'javascript', 'json', 'eruby', 'javascript', 'coffee'],
        \ 'passive_filetypes': []
        \ }
    let g:syntastic_stl_format = '[%E{Err: %fe #%e}%B{, }%W{Warn: %fw #%w}]'
    let g:syntastic_ruby_checkers = ['rubocop']
    let g:syntastic_dockerfile_checkers = ['hadolint']
    let g:syntastic_coffee_coffeelint_args = "--file ~/dotfiles/coffeelint.json"
    let g:syntastic_python_checkers = ['flake8']

Plug 'glidenote/memolist.vim'
    let g:memolist_memo_suffix = "md"
    let g:memolist_filename_prefix_none = 1

Plug 'rizzatti/dash.vim'
Plug 'editorconfig/editorconfig-vim'
Plug 'luochen1990/rainbow'
let g:rainbow_active = 1 "0 if you want to enable it later via :RainbowToggle
"Plug 'Markology'
Plug 'scrooloose/nerdtree'
Plug 'mattn/vim-maketable'
Plug 'mhinz/vim-signify'
Plug 'Glench/Vim-Jinja2-Syntax'
Plug 'kannokanno/previm'
    let g:previm_plantuml_imageprefix = 'http://localhost:8888/img/'
Plug 'vim-jp/vimdoc-ja'
Plug 'rstacruz/sparkup'
Plug 'taichouchou2/vim-endwise'
Plug 'osyo-manga/vim-over'
Plug 'tyru/open-browser.vim'
Plug 'bronson/vim-trailing-whitespace'
Plug 'jwalton512/vim-blade'
Plug 'hashivim/vim-terraform'
let g:terraform_align=1
let g:terraform_fold_sections=0
let g:terraform_commentstring='//%s'
let g:terraform_fmt_on_save=1

" syntax
Plug 'kchmck/vim-coffee-script'
Plug 'tpope/vim-haml'
Plug 'timcharper/textile.vim'
Plug 'chase/vim-ansible-yaml'
Plug 'kylef/apiblueprint.vim'

" colorscheme
Plug 'nanotech/jellybeans.vim'
Plug 'w0ng/vim-hybrid'
Plug 'vim-scripts/twilight'
Plug 'jonathanfilip/vim-lucius'
Plug 'jpo/vim-railscasts-theme'
Plug 'altercation/vim-colors-solarized'
Plug 'vim-scripts/Wombat'
Plug 'vim-scripts/rdark'
Plug 'tomasr/molokai'
Plug 'cocopon/iceberg.vim'
Plug 'vim-scripts/NERV-ous'
Plug 'sjl/badwolf'
Plug 'morhetz/gruvbox'
Plug 'ghifarit53/tokyonight-vim'
let g:tokyonight_enable_italic = 0
let g:tokyonight_disable_italic_comment = 1

" vim-scripts repos
Plug 'vim-scripts/L9'
Plug 'vim-scripts/rails.vim'

" Language server
Plug 'prabirshrestha/asyncomplete.vim'
Plug 'prabirshrestha/asyncomplete-lsp.vim'
Plug 'prabirshrestha/vim-lsp'
Plug 'mattn/vim-lsp-settings'
Plug 'mattn/vim-lsp-icons'

Plug 'hrsh7th/vim-vsnip'
Plug 'hrsh7th/vim-vsnip-integ'

call plug#end()

filetype plugin indent on     " Required!

if has('win32') && !has('gui_running')
    set encoding=cp932
else
    set encoding=utf-8
endif
"set fileencoding=utf-8
"set fileformat=unix
set fileencodings=utf-8,iso-2022-jp,euc-jp,cp932
set fileformats=unix,dos
set nobackup
set mouse=a
set ttymouse=xterm2
set nowrap
set nonumber
set title
set showcmd
set backspace=indent,eol,start


if has('mac') || has('win32') || has('win32unix')
    set clipboard=unnamed
else
    set clipboard=unnamedplus
endif

set list
set listchars=eol:↩,tab:<->,trail:⊠,extends:⇢,precedes:⇠,nbsp:…

" Search
set ignorecase
set smartcase
set wrapscan
set hlsearch

" Edit
set autoindent
set showmatch
set smartindent
set cindent

" Tab
set tabstop=4
set shiftwidth=4
set expandtab
set smarttab
set shiftround

" datetime
inoremap <Leader>c <C-R>=strftime('%Y-%m-%dT%H:%M:%S+09:00')<CR>

autocmd FileType ruby :set ts=2 sw=2 fenc=utf-8
autocmd FileType eruby :set ts=2 sw=2 fenc=utf-8
autocmd FileType cucumber :set ts=2 sw=2 fenc=utf-8
autocmd FileType coffee :set ts=2 sw=2 fenc=utf-8
autocmd FileType json :set ts=2 sw=2 fenc=utf-8
autocmd FileType java :set noexpandtab ts=4 sw=4 nolist fenc=utf-8
autocmd BufNewFile,BufRead *.pp set filetype=puppet
autocmd BufNewFile,BufRead *.md set filetype=markdown

" color
syntax on
set background=dark
if has('win32') && !has('gui_running')
    colorscheme default
else
    colorscheme tokyonight
endif

highlight SpecialKey cterm=standout,undercurl term=standout,undercurl gui=standout,undercurl

" 全角スペースの表示
highlight ZenkakuSpace cterm=standout,undercurl term=standout,undercurl gui=standout,undercurl
match ZenkakuSpace /　/

" Hack #104: Visual mode で選択したテキストを検索する
" http://vim-users.jp/2009/11/hack104/
vnoremap <silent> * "vy/\V<C-r>=substitute(escape(@v,'\/'),"\n",'\\n','g')<CR><CR>

" Undo
set undofile
set undodir=~/.vim/undo/

" Swap
set swapfile
set directory=~/vimfiles/swap/,~/.vim/swap/,.

if exists('+termguicolors')
    let &t_8f="\<Esc>[38;2;%lu;%lu;%lum"
    let &t_8b="\<Esc>[48;2;%lu;%lu;%lum"
    set termguicolors
endif
