#! /usr/bin/env bash

set -eu
set -o pipefail

cd "$(dirname "${0}")/.."

DOTFILE_ROOT_DIR="$(pwd)"
readonly DOTFILE_ROOT_DIR
BACKUP_DIR="${DOTFILE_ROOT_DIR}/backup"
readonly BACKUP_DIR

source "${DOTFILE_ROOT_DIR}/zsh/autoload/100-xdg.zsh"

function create_symlink() {
    local source_path="${1}"
    local target_path="${2}"
    local backup_name="${3}"

    echo "==> Creating symbolic link ${source_path} -> ${target_path}"

    if [ -L "${target_path}" ]; then
        echo "${target_path} symbolic link found. Unlinking ${target_path}."
        unlink "${target_path}"
    elif [ -e "${target_path}" ]; then
        echo "${target_path} found. Backing up to ${BACKUP_DIR}/${backup_name}"
        mv "${target_path}" "${BACKUP_DIR}/${backup_name}"
    fi

    ln -s "${source_path}" "${target_path}"

    echo -e "==> Symbolic link created successfully!\n"
}

echo "Starting initialization..."

if [ ! -d "${BACKUP_DIR}" ]; then
    echo "Creating ${BACKUP_DIR}"
    mkdir "${BACKUP_DIR}"
fi

# Setup ~/.config symlink
create_symlink "${DOTFILE_ROOT_DIR}" "${XDG_CONFIG_HOME}" "config"

if [ -f "${HOME}/.zshenv" ]; then
    echo "${HOME}/.zshenv found. Backing up to ${BACKUP_DIR}/zshenv"
    mv "${HOME}/.zshenv" "${BACKUP_DIR}/zshenv"
fi
echo "Creating ${HOME}/.zshenv"
echo "export ZDOTDIR=${XDG_CONFIG_HOME}/zsh" >"${HOME}/.zshenv"

# Setup ~/tool-versions symlink
create_symlink "${DOTFILE_ROOT_DIR}/asdf/tool-versions" "${HOME}/tool-versions" "tool-versions"

# Setup ~/.tflint.hcl symlink
create_symlink "${DOTFILE_ROOT_DIR}/tflint/tflint.hcl" "${HOME}/.tflint.hcl" "tflint.hcl"

if [ ! -d "${XDG_DATA_HOME}/zsh" ]; then
    echo "Creating ${XDG_DATA_HOME}/zsh"
    mkdir -p "${XDG_DATA_HOME}/zsh"
fi

echo "Initialization finished!"
echo ""

echo "Starting new zsh session with updated configuration..."
zsh --login

